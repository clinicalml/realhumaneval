{
    "name": "triple_sum_to_zero",
    "task_description": "triples_sum_to_zero takes a list of integers as an input. It returns True if there are three distinct elements in the list that sum to zero, and False otherwise.",
    "function_signature": "def triples_sum_to_zero(l):",
    "unit_test": "assert triples_sum_to_zero([1, 3, 5, 0]) == False\nassert triples_sum_to_zero([1, 3, 5, -1]) == False\nassert triples_sum_to_zero([1, 3, -2, 1]) == True\nassert triples_sum_to_zero([1, 2, 3, 7]) == False\nassert triples_sum_to_zero([1, 2, 5, 7]) == False\nassert triples_sum_to_zero([2, 4, -5, 3, 9, 7]) == True\nassert triples_sum_to_zero([1]) == False\nassert triples_sum_to_zero([1, 3, 5, -100]) == False\nassert triples_sum_to_zero([100, 3, 5, -100]) == False",
    "solution": "def triples_sum_to_zero(l: list):\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            for k in range(j + 1, len(l)):\n                if l[i] + l[j] + l[k] == 0:\n                    return True\n    return False",
    "type": "logic"
}