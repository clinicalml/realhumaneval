{
    "name": "t_test",
    "task_description": "\nYour goal is to complete the function simplified_t_test. This function takes as input two arrays of numbers and will return a float value called t_test. \n\nThe simplified_t_test is a statistical test that is used to compare the means of two populations. The value is computed as follows:\n\nt_test =  abs ( (mean1 - mean2) / sqrt((variance1 / n1) + (variance2 / n2))  )\n\nwhere mean1 and mean2 are the means of the two populations, variance1 and variance2 are the variances of the two populations with a modified denominator:\nvariance1 = sum((x - mean1)^2) / (n1 - 2)\nvariance2 = sum((x - mean2)^2) / (n2 - 2)\n\n, and n1 and n2 are the number of samples in each population. Note this is not the ordinary t-test, but a simplified version of it.\n",
    "function_signature": "\n\n# function signature\ndef simplified_t_test(sample1, sample2):\n    '''\n    :param sample1: List or array of sample data (sample 1)\n    :param sample2: List or array of sample data (sample 2)\n    :return: simplified t-test statistic\n    '''\n    t_test = 0\n    # write your code here\n    return t_test\n",
    "unit_test": "\nimport numpy as np\n\n# Test with known values\nsample1 = [10, 20, 30, 40, 50]\nsample2 = [30, 40, 50, 60, 70]\nexpected_t_stat = 1.7320508075688774  # This value should be pre-calculated\nprint(simplified_t_test(sample1, sample2))\nassert np.isclose(simplified_t_test(sample1, sample2), expected_t_stat, atol=1e-3), \"Test with known values failed\"\n\n# Test with identical samples\nidentical_sample = [1, 2, 3, 4, 5]\nassert simplified_t_test(identical_sample, identical_sample) == 0, \"Test with identical samples failed\"\n\n\nsample1 = [1,2,-1,3,4]\nsample2 = [2,3,-2,4,5]\nexpected_t_stat = 0.35032452487268523\nprint(simplified_t_test(sample1, sample2))\nassert np.isclose(simplified_t_test(sample1, sample2), expected_t_stat, atol=1e-3), \"Test with known values failed\"\n",
    "solution": "\nimport numpy as np\n\ndef simplified_t_test(sample1, sample2):\n    '''\n    :param sample1: List or array of sample data (sample 1)\n    :param sample2: List or array of sample data (sample 2)\n    :return: simplified t-test statistic\n    '''\n    t_test = 0\n    # write your code here\n    mean1 = np.mean(sample1)\n    mean2 = np.mean(sample2)\n    # variance with modified denominator\n    variance1 = np.var(sample1, ddof=2)\n    variance2 = np.var(sample2, ddof=2)\n    n1 = len(sample1)\n    n2 = len(sample2)\n    t_test = (mean1 - mean2) / np.sqrt(variance1/n1 + variance2/n2)\n    return abs(t_test)\n",
    "type": "data_manip_math"
}